{"version":3,"sources":["WaveSurfer.js","App.js","serviceWorker.js","index.js","dol.jpg"],"names":["MyComponent","state","wavesurfer","isPlaying","togglePlaying","_this$state","_this","pause","play","document","querySelector","classList","add","setTimeout","remove","setState","window","WaveSurfer","create","container","waveColor","progressColor","barWidth","height","maxCanvasWidth","scrollParent","load","on","this","react_default","a","createElement","className","onClick","style","padding","id","React","Component","App","setWaveFormWidth","width","Number","getComputedStyle","slice","getElementById","concat","onresize","src","dolImage","href","download","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ab6e03d8.chunk.js","sourcesContent":["\nimport React from 'react';\n// import WaveSurfer from 'wavesurfer.js';\n// console.log(WaveSurfer.create);\n \nclass MyComponent extends React.Component {\n  state = {\n    wavesurfer: null,\n    isPlaying: false\n  };\n  componentDidMount() {\n    \n    var wavesurfer = window.WaveSurfer.create({\n      container: '#waveforms',\n      waveColor: 'navy',\n      progressColor: 'purple',\n      barWidth: 2,\n      height: 240,\n      maxCanvasWidth: 300,\n      scrollParent: true,\n    });\n    wavesurfer.load('https://pawnjefferson.github.io/trackz/dol.mp3');\n    wavesurfer.on('finish', this.togglePlaying);\n    // wavesurfer.on('ready', function () {\n    //   wavesurfer.play();\n    // });\n    this.setState({ wavesurfer });\n\n  }\n  togglePlaying = () => {\n    const { wavesurfer, isPlaying } = this.state;\n    if (isPlaying) {\n      wavesurfer.pause();\n    } else {\n      wavesurfer.play();\n      document.querySelector('.ws-player button').classList.add(\"animate\");\n      setTimeout(() => {\n        document.querySelector('.ws-player button').classList.remove(\"animate\");\n      }, 5000);\n    }\n    this.setState({ isPlaying: !isPlaying });\n  };\n  render() {\n    const { isPlaying } = this.state;\n    return (\n      <div className=\"ws-player\">\n        <button onClick={this.togglePlaying}>\n          {isPlaying ? '| |' : ' ► '}\n        </button>\n        <div style={{ padding: '10px' }}>\n          <div id=\"waveforms\"></div>\n        </div>\n       \n      </div>\n    );\n  }\n}\nexport default MyComponent;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport WaveSurfer from './WaveSurfer';\nimport dolImage from './dol.jpg';\n\nclass App extends React.Component {\n  setWaveFormWidth = () => {\n    const width = Number(window.getComputedStyle(document.querySelector('.ws-player')).width.slice(0, -2));\n    document.getElementById('waveforms').style.width = `${width-300}px`;\n  }\n  componentDidMount() {\n    this.setWaveFormWidth();\n    window.onresize = this.setWaveFormWidth;\n  }\n  render () {\n    const src = \"dol.mp3\";\n    return (\n      <div className=\"App\">\n  \n        <WaveSurfer src={src}/>\n  \n        <div className=\"two-column\">  \n  \n          {/* <div> */}\n            <img src={dolImage} className=\"track-art\" /> \n          {/* </div> */}\n          <div>\n            <h1>\"Down on Love\"</h1>\n            <h3>by Helios Hype</h3>\n            <strong><a href=\"https://pawnjefferson.github.io/trackz/dol.mp3\" download=\"dol.mp3\">mp3 download</a></strong><br/><br/>\n            <hr/>\n            <pre>\n            I was thinking of the sun<br/>\n            Just waiting for my little slice of pie <br/>\n            Wondering where she’s gone today<br/>\n            All I can remember’s yesterday<br/><br/>\n  \n            I was a dreamer down on love<br/>\n            I was a dreamer down on love<br/>\n            Just thinking bout something else tonight<br/>\n            Just hoping for someone else tonight<br/><br/>\n  \n            When I’m thinking of the moon<br/>\n            It makes my ladies wanna swoon<br/>\n            Turn me round, start again<br/>\n            It’s all left in the wind<br/><br/>\n  \n            I was a dreamer down on love<br/>\n            I was a dreamer down on love<br/>\n            Just thinking bout something else tonight<br/>\n            Just hoping for someone else tonight<br/><br/>\n  \n            ‘Cause thinkin bout the sun will make you feel alright<br/>\n            ‘Cause thinkin bout the sun will make you feel alright<br/><br/>\n  \n            When I’m out there on the edge<br/>\n            It makes me thankful fo be with you<br/>\n            Taking in all that’s right<br/>\n            It makes me love that morning light<br/><br/>\n  \n            I was a dreamer down on love<br/>\n            I was a dreamer down on love<br/>\n            Just thinking bout something else tonight<br/>\n            Just hoping for someone else tonight<br/><br/>\n  \n            ‘Cause thinkin bout the sun will make you feel alright<br/>\n            And thinkin bout the sun will make you feel alright <br/><br/>\n  \n            On and on and on and on<br/>\n            On and on and on and on<br/><br/>\n  \n            It’s everything you want and everything you needed!<br/>\n            It’s everything you want and anything you needed!<br/>\n            It’s everything you want and everything you needed!<br/>\n            It’s everything you want and everything you needed!\n            </pre>\n            <br/>\n          </div>\n  \n        </div>\n        \n        \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/dol.c62b39cb.jpg\";"],"sourceRoot":""}